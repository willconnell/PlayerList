{"ast":null,"code":"var _jsxFileName = \"/Users/williamconnell/Desktop/Projects/playerlist/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar.js\";\nimport Cards from \"./components/Cards.js\";\nimport Heading from \"./components/Heading.js\";\nimport AddModal from \"./components/AddModal.js\";\nimport ViewCard from \"./components/ViewCard.js\";\nimport EditModal from \"./components/EditModal.js\";\nimport MobileSidebar from \"./components/MobileSidebar.js\";\nimport Transition from \"react-transition-group/Transition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [addShowing, setAddShowing] = useState(false);\n  const [viewCardShowing, setViewCardShowing] = useState(false);\n  const [viewableSong, setViewableSong] = useState(\"\");\n  const [editShowing, setEditShowing] = useState(false);\n  const [mobileSidebarShowing, setMobileSidebarShowing] = useState(false);\n  const [count, setCount] = useState({\n    learned: 0,\n    tolearn: 0,\n    learning: 0\n  });\n  const [songs, setSongs] = useState([]); // practice call to the genius API\n\n  useEffect(async () => {\n    const accessToken = \"qsdfz6yd1U341DT9dPiANrAN67MdHenvI_D8s9g-QnNdmie17u97MhuDrHBr4Upj\";\n    const query = \"something%20the%20beatles\";\n    const uri = `https://api.genius.com/search?access_token=${accessToken}&q=${query}`; // const uri = `https://api.genius.com/songs/87564?access_token=${accessToken}`;\n    // const uri = `https://api.genius.com/songs/78960?access_token=${accessToken}`;\n\n    const search_response = await fetch(uri);\n    const data = await search_response.json();\n    console.log(data); // first result of search; currently no checking in place yet\n\n    console.log(data.response.hits[0].result.full_title);\n    const api_path = data.response.hits[0].result.api_path;\n    console.log(\"api path is\", api_path);\n    const song_uri = `https://api.genius.com${api_path}?access_token=${accessToken}`;\n    console.log(song_uri);\n    const song_response = await fetch(song_uri);\n    const song_data = await song_response.json();\n    console.log(song_data); // console.log(\"youtube link is\", data.response.song.media[1].url);\n    // console.log(\"genius url is \", data.response.song.url);\n  }); // fetch songs from backend when app is initially rendered\n\n  useEffect(() => {\n    fetch(\"/api/songs\").then(response => {\n      return response.json();\n    }).then(data => {\n      setSongs(data);\n    });\n    console.log(\"songs retrieved from backend\");\n  }, []); // count songs for sidebar numbers\n\n  useEffect(() => {\n    let tolearn = 0;\n    let learning = 0;\n    let learned = 0;\n    songs.map(song => {\n      if (song.status === \"To Learn\") {\n        tolearn += 1;\n      } else if (song.status === \"In Progress\") {\n        learning += 1;\n      } else if (song.status === \"Learned\") {\n        learned += 1;\n      }\n    });\n    setCount({\n      learned: learned,\n      tolearn: tolearn,\n      learning: learning\n    });\n  }, [songs]);\n\n  const toggleAddShowing = () => {\n    setAddShowing(!addShowing); // close mobile sidebar if it's opened\n\n    setMobileSidebarShowing(false);\n  };\n\n  const toggleEditShowing = () => {\n    setEditShowing(!editShowing);\n  };\n\n  const toggleViewCard = id => {\n    setViewCardShowing(!viewCardShowing); // fetch song data by id and store in viewableSong\n\n    songs.map(song => {\n      if (song.id === id) {\n        setViewableSong(song);\n      }\n    });\n  };\n\n  const exitViewCard = () => {\n    setViewCardShowing(false);\n  };\n\n  const addSong = async song => {\n    setAddShowing(false);\n    console.log(\"new song added\");\n    setSongs([...songs, {\n      id: songs.length + 1,\n      name: song.name,\n      artist: song.artist,\n      chords: song.chords,\n      youtube: song.youtube,\n      status: song.status,\n      notes: song.notes,\n      lyrics: song.lyrics,\n      visible: true\n    }]); // send song data to backend server\n\n    const response = await fetch(\"/api/songs\", {\n      method: \"POST\",\n      body: JSON.stringify(song),\n      // FIXME: headers line might not be technically required\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    console.log(\"song sent to server\");\n  };\n\n  const saveEditedSong = async newSong => {\n    songs.map(async song => {\n      if (song.id === newSong.id) {\n        song.name = newSong.name;\n        song.artist = newSong.artist;\n        song.chords = newSong.chords;\n        song.youtube = newSong.youtube;\n        song.status = newSong.status;\n        song.notes = newSong.notes;\n        song.lyrics = newSong.lyrics;\n      }\n    });\n    console.log(newSong);\n    const response = await fetch(`/api/songs/${newSong.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(newSong),\n      // FIXME: headers line might not be technically required\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(\"updated song sent to server\");\n  };\n\n  const filterSongs = status => {\n    songs.map(song => {\n      console.log(song.status);\n\n      if (status === \"All\") {\n        song.visible = true;\n      } else if (song.status === status) {\n        song.visible = true;\n      } else {\n        song.visible = false;\n      }\n    });\n    setSongs([...songs]); // close mobile sidebar if it's open\n\n    setMobileSidebarShowing(false);\n  };\n\n  const deleteSong = async songID => {\n    // delete song from UI\n    setSongs(songs.filter(song => song.id !== songID));\n    setEditShowing(false); // delete from backend with API call\n\n    fetch(`/api/songs/${songID}`, {\n      method: \"DELETE\"\n    });\n  };\n\n  const markCompleted = songID => {\n    console.log(\"mark completed\");\n    console.log(songID);\n    songs.map(song => {\n      if (song.id === songID) {\n        song.status = \"Learned\";\n      }\n    });\n    setSongs([...songs]);\n    setViewCardShowing(false); // include animation with the mark as completed button if possible; (to show user that it worked)\n  };\n\n  const toggleMobileSidebar = boolean => {\n    setMobileSidebarShowing(boolean);\n    console.log(\"toggle mobile sidebar clicked\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      toggle: toggleAddShowing,\n      allLen: songs.length,\n      count: count,\n      filter: filterSongs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transition, {\n      in: mobileSidebarShowing,\n      timeout: 400,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: state => /*#__PURE__*/_jsxDEV(MobileSidebar, {\n        state: state,\n        toggle: toggleAddShowing,\n        allLen: songs.length,\n        count: count,\n        filter: filterSongs,\n        toggleSidebar: toggleMobileSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transition, {\n      in: viewCardShowing,\n      timeout: 400,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: state => /*#__PURE__*/_jsxDEV(ViewCard, {\n        state: state,\n        toggle: toggleViewCard,\n        toggleEdit: toggleEditShowing,\n        song: viewableSong,\n        exit: exitViewCard,\n        markCompleted: markCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), addShowing && /*#__PURE__*/_jsxDEV(AddModal, {\n      toggle: toggleAddShowing,\n      onAddSong: addSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Transition, {\n      in: editShowing,\n      timeout: 400,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: state => /*#__PURE__*/_jsxDEV(EditModal, {\n        state: state,\n        toggle: toggleEditShowing // probably will need to edit this so it doesn't create an entire new song\n        ,\n        onAddSong: addSong,\n        song: viewableSong,\n        saveChanges: saveEditedSong,\n        deleteSong: deleteSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      toggleSidebar: toggleMobileSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row cards-container offset-md-3 d-flex\",\n        children: songs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Cards, {\n          songs: songs,\n          toggle: toggleViewCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GYHT99SbOGIXu9cz7/lh7c25nhY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/williamconnell/Desktop/Projects/playerlist/client/src/App.js"],"names":["useState","useEffect","Sidebar","Cards","Heading","AddModal","ViewCard","EditModal","MobileSidebar","Transition","App","addShowing","setAddShowing","viewCardShowing","setViewCardShowing","viewableSong","setViewableSong","editShowing","setEditShowing","mobileSidebarShowing","setMobileSidebarShowing","count","setCount","learned","tolearn","learning","songs","setSongs","accessToken","query","uri","search_response","fetch","data","json","console","log","response","hits","result","full_title","api_path","song_uri","song_response","song_data","then","map","song","status","toggleAddShowing","toggleEditShowing","toggleViewCard","id","exitViewCard","addSong","length","name","artist","chords","youtube","notes","lyrics","visible","method","body","JSON","stringify","headers","saveEditedSong","newSong","filterSongs","deleteSong","songID","filter","markCompleted","toggleMobileSidebar","boolean","state"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar.js\";\nimport Cards from \"./components/Cards.js\";\nimport Heading from \"./components/Heading.js\";\nimport AddModal from \"./components/AddModal.js\";\nimport ViewCard from \"./components/ViewCard.js\";\nimport EditModal from \"./components/EditModal.js\";\nimport MobileSidebar from \"./components/MobileSidebar.js\";\nimport Transition from \"react-transition-group/Transition\";\n\nfunction App() {\n  const [addShowing, setAddShowing] = useState(false);\n  const [viewCardShowing, setViewCardShowing] = useState(false);\n  const [viewableSong, setViewableSong] = useState(\"\");\n  const [editShowing, setEditShowing] = useState(false);\n  const [mobileSidebarShowing, setMobileSidebarShowing] = useState(false);\n  const [count, setCount] = useState({\n    learned: 0,\n    tolearn: 0,\n    learning: 0,\n  });\n  const [songs, setSongs] = useState([]);\n\n  // practice call to the genius API\n  useEffect(async () => {\n    const accessToken =\n      \"qsdfz6yd1U341DT9dPiANrAN67MdHenvI_D8s9g-QnNdmie17u97MhuDrHBr4Upj\";\n    const query = \"something%20the%20beatles\";\n    const uri = `https://api.genius.com/search?access_token=${accessToken}&q=${query}`;\n    // const uri = `https://api.genius.com/songs/87564?access_token=${accessToken}`;\n    // const uri = `https://api.genius.com/songs/78960?access_token=${accessToken}`;\n\n    const search_response = await fetch(uri);\n    const data = await search_response.json();\n    console.log(data);\n    // first result of search; currently no checking in place yet\n    console.log(data.response.hits[0].result.full_title);\n    const api_path = data.response.hits[0].result.api_path;\n    console.log(\"api path is\", api_path);\n\n    const song_uri = `https://api.genius.com${api_path}?access_token=${accessToken}`;\n    console.log(song_uri);\n    const song_response = await fetch(song_uri);\n    const song_data = await song_response.json();\n    console.log(song_data);\n    // console.log(\"youtube link is\", data.response.song.media[1].url);\n    // console.log(\"genius url is \", data.response.song.url);\n  });\n\n  // fetch songs from backend when app is initially rendered\n  useEffect(() => {\n    fetch(\"/api/songs\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setSongs(data);\n      });\n    console.log(\"songs retrieved from backend\");\n  }, []);\n\n  // count songs for sidebar numbers\n  useEffect(() => {\n    let tolearn = 0;\n    let learning = 0;\n    let learned = 0;\n\n    songs.map((song) => {\n      if (song.status === \"To Learn\") {\n        tolearn += 1;\n      } else if (song.status === \"In Progress\") {\n        learning += 1;\n      } else if (song.status === \"Learned\") {\n        learned += 1;\n      }\n    });\n\n    setCount({\n      learned: learned,\n      tolearn: tolearn,\n      learning: learning,\n    });\n  }, [songs]);\n\n  const toggleAddShowing = () => {\n    setAddShowing(!addShowing);\n    // close mobile sidebar if it's opened\n    setMobileSidebarShowing(false);\n  };\n\n  const toggleEditShowing = () => {\n    setEditShowing(!editShowing);\n  };\n\n  const toggleViewCard = (id) => {\n    setViewCardShowing(!viewCardShowing);\n    // fetch song data by id and store in viewableSong\n    songs.map((song) => {\n      if (song.id === id) {\n        setViewableSong(song);\n      }\n    });\n  };\n\n  const exitViewCard = () => {\n    setViewCardShowing(false);\n  };\n\n  const addSong = async (song) => {\n    setAddShowing(false);\n    console.log(\"new song added\");\n    setSongs([\n      ...songs,\n      {\n        id: songs.length + 1,\n        name: song.name,\n        artist: song.artist,\n        chords: song.chords,\n        youtube: song.youtube,\n        status: song.status,\n        notes: song.notes,\n        lyrics: song.lyrics,\n        visible: true,\n      },\n    ]);\n\n    // send song data to backend server\n    const response = await fetch(\"/api/songs\", {\n      method: \"POST\",\n      body: JSON.stringify(song),\n      // FIXME: headers line might not be technically required\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    console.log(data);\n    console.log(\"song sent to server\");\n  };\n\n  const saveEditedSong = async (newSong) => {\n    songs.map(async (song) => {\n      if (song.id === newSong.id) {\n        song.name = newSong.name;\n        song.artist = newSong.artist;\n        song.chords = newSong.chords;\n        song.youtube = newSong.youtube;\n        song.status = newSong.status;\n        song.notes = newSong.notes;\n        song.lyrics = newSong.lyrics;\n      }\n    });\n\n    console.log(newSong);\n    const response = await fetch(`/api/songs/${newSong.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(newSong),\n      // FIXME: headers line might not be technically required\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    console.log(\"updated song sent to server\");\n  };\n\n  const filterSongs = (status) => {\n    songs.map((song) => {\n      console.log(song.status);\n      if (status === \"All\") {\n        song.visible = true;\n      } else if (song.status === status) {\n        song.visible = true;\n      } else {\n        song.visible = false;\n      }\n    });\n    setSongs([...songs]);\n    // close mobile sidebar if it's open\n    setMobileSidebarShowing(false);\n  };\n\n  const deleteSong = async (songID) => {\n    // delete song from UI\n    setSongs(songs.filter((song) => song.id !== songID));\n    setEditShowing(false);\n\n    // delete from backend with API call\n    fetch(`/api/songs/${songID}`, {\n      method: \"DELETE\",\n    });\n  };\n\n  const markCompleted = (songID) => {\n    console.log(\"mark completed\");\n    console.log(songID);\n\n    songs.map((song) => {\n      if (song.id === songID) {\n        song.status = \"Learned\";\n      }\n    });\n\n    setSongs([...songs]);\n    setViewCardShowing(false);\n    // include animation with the mark as completed button if possible; (to show user that it worked)\n  };\n\n  const toggleMobileSidebar = (boolean) => {\n    setMobileSidebarShowing(boolean);\n    console.log(\"toggle mobile sidebar clicked\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        toggle={toggleAddShowing}\n        allLen={songs.length}\n        count={count}\n        filter={filterSongs}\n      />\n\n      <Transition\n        in={mobileSidebarShowing}\n        timeout={400}\n        mountOnEnter\n        unmountOnExit\n      >\n        {(state) => (\n          <MobileSidebar\n            state={state}\n            toggle={toggleAddShowing}\n            allLen={songs.length}\n            count={count}\n            filter={filterSongs}\n            toggleSidebar={toggleMobileSidebar}\n          />\n        )}\n      </Transition>\n\n      {/* {mobileSidebarShowing && (\n        <MobileSidebar\n          toggle={toggleAddShowing}\n          allLen={songs.length}\n          count={count}\n          filter={filterSongs}\n          toggleSidebar={toggleMobileSidebar}\n        />\n      )} */}\n\n      <Transition in={viewCardShowing} timeout={400} mountOnEnter unmountOnExit>\n        {(state) => (\n          <ViewCard\n            state={state}\n            toggle={toggleViewCard}\n            toggleEdit={toggleEditShowing}\n            song={viewableSong}\n            exit={exitViewCard}\n            markCompleted={markCompleted}\n          />\n        )}\n      </Transition>\n\n      {/* <Transition in={addShowing} timeout={400} mountOnEnter unmountOnExit>\n        {(state) => (\n          <AddModal\n            state={state}\n            toggle={toggleAddShowing}\n            onAddSong={addSong}\n          />\n        )}\n      </Transition> */}\n\n      {/* FIXME: including below line until I can fix bug with the above transition */}\n      {addShowing && <AddModal toggle={toggleAddShowing} onAddSong={addSong} />}\n\n      <Transition in={editShowing} timeout={400} mountOnEnter unmountOnExit>\n        {(state) => (\n          <EditModal\n            state={state}\n            toggle={toggleEditShowing}\n            // probably will need to edit this so it doesn't create an entire new song\n            onAddSong={addSong}\n            song={viewableSong}\n            saveChanges={saveEditedSong}\n            deleteSong={deleteSong}\n          />\n        )}\n      </Transition>\n\n      <Heading toggleSidebar={toggleMobileSidebar} />\n      <div className=\"container\">\n        <div className=\"row cards-container offset-md-3 d-flex\">\n          {/* <Cards songs={songs} toggle={toggleViewCard} /> */}\n          {songs.length === 0 ? (\n            <p>No Songs</p>\n          ) : (\n            <Cards songs={songs} toggle={toggleViewCard} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}