{"ast":null,"code":"var _jsxFileName = \"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/ViewCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"React\";\nimport { BsX, BsCheck } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewCard = props => {\n  _s();\n\n  const [spotify, setSpotify] = useState(null);\n  const [soundcloud, setSoundcloud] = useState(null);\n  const [genius, setGenius] = useState(null);\n\n  const onEdit = () => {\n    props.exit(); // show addmodal card but with current information already filled in\n    // create an editmodal component for ^this\n    // call function defined in App.js to show the edit modal\n\n    props.toggleEdit(props.song.id);\n  };\n\n  const showMedia = () => {\n    console.log(props.song.lyrics); // console.log(props);\n  }; // const markAsLearned = () => {\n  //   // mark song as learned;\n  // };\n\n\n  const modalClasses = [\"addmodal\", props.state === \"entering\" ? \"enteringCard\" : props.state === \"exiting\" ? \"exitingCard\" : \"\"];\n  const backdropClasses = [\"backdrop\", props.state === \"entering\" ? \"enteringBackdrop\" : props.state === \"exiting\" ? \"exitingBackdrop\" : \"\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: backdropClasses.join(\" \"),\n      onClick: props.exit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalClasses.join(\" \"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalheading d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: props.song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BsX, {\n          className: \"modalX\",\n          onClick: props.toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalheading d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [\"by \", props.song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BsX, {\n          className: \"modalX hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), props.song.youtube !== \"\" && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"345\",\n        src: `https://www.youtube.com/embed/${props.song.youtube}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showMedia,\n          children: \"Show This Ish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.song.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onEdit,\n          className: \"btn btn-secondary m-1\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.markCompleted(props.song.id),\n          className: \"btn btn-light m-1\",\n          children: [/*#__PURE__*/_jsxDEV(BsCheck, {\n            style: {\n              marginRight: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), \"Mark as Learned\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewCard, \"P+0qpErWIP7fCY6N4miTdspQyp0=\");\n\n_c = ViewCard;\nexport default ViewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCard\");","map":{"version":3,"sources":["/Users/williamconnell/Desktop/Projects/playerList/client/src/components/ViewCard.js"],"names":["React","useState","BsX","BsCheck","ViewCard","props","spotify","setSpotify","soundcloud","setSoundcloud","genius","setGenius","onEdit","exit","toggleEdit","song","id","showMedia","console","log","lyrics","modalClasses","state","backdropClasses","join","textAlign","name","toggle","artist","youtube","notes","markCompleted","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"React\";\nimport { BsX, BsCheck } from \"react-icons/bs\";\n\nconst ViewCard = (props) => {\n  const [spotify, setSpotify] = useState(null);\n  const [soundcloud, setSoundcloud] = useState(null);\n  const [genius, setGenius] = useState(null);\n  const onEdit = () => {\n    props.exit();\n    // show addmodal card but with current information already filled in\n    // create an editmodal component for ^this\n    // call function defined in App.js to show the edit modal\n    props.toggleEdit(props.song.id);\n  };\n\n  const showMedia = () => {\n    console.log(props.song.lyrics);\n    // console.log(props);\n  };\n\n  // const markAsLearned = () => {\n  //   // mark song as learned;\n  // };\n  const modalClasses = [\n    \"addmodal\",\n    props.state === \"entering\"\n      ? \"enteringCard\"\n      : props.state === \"exiting\"\n      ? \"exitingCard\"\n      : \"\",\n  ];\n\n  const backdropClasses = [\n    \"backdrop\",\n    props.state === \"entering\"\n      ? \"enteringBackdrop\"\n      : props.state === \"exiting\"\n      ? \"exitingBackdrop\"\n      : \"\",\n  ];\n\n  return (\n    <>\n      <div className={backdropClasses.join(\" \")} onClick={props.exit} />\n      <div className={modalClasses.join(\" \")}>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h1 style={{ textAlign: \"center\" }}>{props.song.name}</h1>\n          <BsX className=\"modalX\" onClick={props.toggle} />\n        </div>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h2 style={{ textAlign: \"center\" }}>by {props.song.artist}</h2>\n          {/* keep modalX here for consistent layout, but make it invisible and non-functional */}\n          <BsX className=\"modalX hidden\" />\n        </div>\n        {props.song.youtube !== \"\" && (\n          <iframe\n            width=\"100%\"\n            height=\"345\"\n            src={`https://www.youtube.com/embed/${props.song.youtube}`}\n          ></iframe>\n        )}\n\n        {/* <div className=\"link-button-container mx-auto\">\n          <button className=\"btn btn-outline-dark m-2 link-btn\">\n            Chords / Tabs\n          </button>\n          <br />\n          <button className=\"btn btn-outline-dark m-2 link-btn\">\n            View Lyrics\n          </button>\n          <br />\n          <button className=\"btn btn-outline-dark m-2 link-btn\">\n            Listen on Spotify\n          </button>\n          <br />\n          <button className=\"btn btn-outline-dark m-2 link-btn\">\n            Listen on Soundcloud\n          </button>\n          <p>{props.lyrics}</p>\n          <br />\n          <br />\n        </div> */}\n        <div>\n          <button onClick={showMedia}>Show This Ish</button>\n        </div>\n\n        <div className=\"notes-container\">\n          <h6>\n            <strong>Notes</strong>\n          </h6>\n          <span>{props.song.notes}</span>\n        </div>\n        <div className=\"d-flex\">\n          <button onClick={onEdit} className=\"btn btn-secondary m-1\">\n            Edit\n          </button>\n          <button\n            onClick={() => props.markCompleted(props.song.id)}\n            className=\"btn btn-light m-1\"\n          >\n            <BsCheck style={{ marginRight: \"5px\" }} />\n            Mark as Learned\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewCard;\n"]},"metadata":{},"sourceType":"module"}