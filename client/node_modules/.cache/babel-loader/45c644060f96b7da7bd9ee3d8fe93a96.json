{"ast":null,"code":"var _jsxFileName = \"/Users/williamconnell/Desktop/Projects/playerlist/src/components/EditModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { BsX, BsTrash } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditModal = props => {\n  _s();\n\n  const [songid, setSongid] = useState(\"\");\n  const [songName, setSongName] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [chords, setChords] = useState(\"\");\n  const [youtube, setYoutube] = useState(\"\");\n  const [status, setStatus] = useState(\"To Learn\");\n  const [notes, setNotes] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\"); // the first time the modal is rendered, set song parameters (so they're not empty)\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    setSongid(props.song.id);\n    setSongName(props.song.name);\n    setArtist(props.song.artist);\n    setChords(props.song.chords);\n    setYoutube(props.song.youtube);\n    setStatus(props.song.status);\n    setNotes(props.song.notes);\n    setLyrics(props.song.lyrics);\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault(); // convert youtube link to embed link\n\n    const newlink = \"\";\n\n    if (youtube != \"https://www.youtube.com/embed/\") {\n      const code = youtube.slice(-11);\n      const newlink = \"https://www.youtube.com/embed/\" + code;\n      console.log(\"unreachable\");\n    } else {\n      console.log(\"unreachable\");\n      const newlink = \"\";\n    }\n\n    const song = {\n      id: songid,\n      name: songName,\n      artist: artist,\n      chords: chords,\n      youtube: newlink,\n      status: status,\n      notes: notes,\n      lyrics: lyrics\n    };\n    props.saveChanges(song);\n    props.toggle();\n  };\n\n  const onDelete = () => {\n    console.log(\"Song Deleted!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"addmodal\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalheading d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Edit Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BsX, {\n          className: \"modalX\",\n          onClick: props.toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlInput1\",\n          className: \"form-label\",\n          children: \"Song Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          defaultValue: props.song.name,\n          placeholder: \"Something\",\n          onChange: e => setSongName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlInput1\",\n          className: \"form-label\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          defaultValue: props.song.artist,\n          placeholder: \"The Beatles\",\n          onChange: e => setArtist(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlInput1\",\n          className: \"form-label\",\n          children: \"Link to Chords / Tabs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          placeholder: \"http://example.com\",\n          defaultValue: props.song.chords,\n          onChange: e => setChords(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlInput1\",\n          className: \"form-label\",\n          children: \"Link to Youtube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), props.song.youtube !== \"https://www.youtube.com/embed/\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          defaultValue: props.song.youtube,\n          placeholder: \"http://example.com\",\n          onChange: e => setYoutube(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          placeholder: \"http://example.com\",\n          onChange: e => setYoutube(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        onChange: e => setStatus(e.target.value),\n        children: [props.song.status === \"In Progress\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"radio-learning\",\n          name: \"status\",\n          value: \"In Progress\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"radio-learning\",\n          name: \"status\",\n          value: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"radio-learning\",\n          children: \"Learning In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), props.song.status === \"To Learn\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"radio-tolearn\",\n          name: \"status\",\n          value: \"To Learn\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"radio-tolearn\",\n          name: \"status\",\n          value: \"To Learn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"radio-tolearn\",\n          children: \"Want to Learn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), props.song.status === \"Learned\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"radio-learned\",\n          name: \"status\",\n          value: \"Learned\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: \"radio-learned\",\n          name: \"status\",\n          value: \"Learned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"radio-learned\",\n          children: \"Learned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlTextarea1\",\n          className: \"form-label\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\",\n          defaultValue: props.song.notes,\n          placeholder: \"Notes\",\n          onChange: e => setNotes(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary m-2\",\n        onClick: props.toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger m-2\",\n        onClick: onDelete,\n        children: [/*#__PURE__*/_jsxDEV(BsTrash, {\n          style: {\n            marginRight: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), \"Delete Song\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success m-2\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditModal, \"EDq98tQFUvvA6BRIiTdkTB7jeJs=\");\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/williamconnell/Desktop/Projects/playerlist/src/components/EditModal.js"],"names":["React","useState","useEffect","BsX","BsTrash","EditModal","props","songid","setSongid","songName","setSongName","artist","setArtist","chords","setChords","youtube","setYoutube","status","setStatus","notes","setNotes","lyrics","setLyrics","console","log","song","id","name","onSubmit","e","preventDefault","newlink","code","slice","saveChanges","toggle","onDelete","textAlign","target","value","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { BsX, BsTrash } from \"react-icons/bs\";\n\nconst EditModal = (props) => {\n  const [songid, setSongid] = useState(\"\");\n  const [songName, setSongName] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [chords, setChords] = useState(\"\");\n  const [youtube, setYoutube] = useState(\"\");\n  const [status, setStatus] = useState(\"To Learn\");\n  const [notes, setNotes] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n\n  // the first time the modal is rendered, set song parameters (so they're not empty)\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    setSongid(props.song.id);\n    setSongName(props.song.name);\n    setArtist(props.song.artist);\n    setChords(props.song.chords);\n    setYoutube(props.song.youtube);\n    setStatus(props.song.status);\n    setNotes(props.song.notes);\n    setLyrics(props.song.lyrics);\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // convert youtube link to embed link\n    const newlink = \"\";\n    if (youtube != \"https://www.youtube.com/embed/\") {\n      const code = youtube.slice(-11);\n      const newlink = \"https://www.youtube.com/embed/\" + code;\n      console.log(\"unreachable\");\n    } else {\n      console.log(\"unreachable\");\n      const newlink = \"\";\n    }\n\n    const song = {\n      id: songid,\n      name: songName,\n      artist: artist,\n      chords: chords,\n      youtube: newlink,\n      status: status,\n      notes: notes,\n      lyrics: lyrics,\n    };\n\n    props.saveChanges(song);\n    props.toggle();\n  };\n\n  const onDelete = () => {\n    console.log(\"Song Deleted!\");\n  };\n\n  return (\n    <>\n      <div className=\"backdrop\" />\n      <form className=\"addmodal\" onSubmit={onSubmit}>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h1 style={{ textAlign: \"center\" }}>Edit Song</h1>\n          <BsX className=\"modalX\" onClick={props.toggle} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Song Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            defaultValue={props.song.name}\n            placeholder=\"Something\"\n            onChange={(e) => setSongName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Artist\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            defaultValue={props.song.artist}\n            placeholder=\"The Beatles\"\n            onChange={(e) => setArtist(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Chords / Tabs\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"http://example.com\"\n            defaultValue={props.song.chords}\n            onChange={(e) => setChords(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Youtube\n          </label>\n          {props.song.youtube !== \"https://www.youtube.com/embed/\" ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              defaultValue={props.song.youtube}\n              placeholder=\"http://example.com\"\n              onChange={(e) => setYoutube(e.target.value)}\n            />\n          ) : (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              placeholder=\"http://example.com\"\n              onChange={(e) => setYoutube(e.target.value)}\n            />\n          )}\n        </div>\n\n        <label className=\"form-label\">Status:</label>\n        <div className=\"form-check\" onChange={(e) => setStatus(e.target.value)}>\n          {props.song.status === \"In Progress\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learning\"\n              name=\"status\"\n              value=\"In Progress\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learning\"\n              name=\"status\"\n              value=\"In Progress\"\n            />\n          )}\n          <label htmlFor=\"radio-learning\">Learning In Progress</label>\n          <br />\n\n          {props.song.status === \"To Learn\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-tolearn\"\n              name=\"status\"\n              value=\"To Learn\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-tolearn\"\n              name=\"status\"\n              value=\"To Learn\"\n            />\n          )}\n          <label htmlFor=\"radio-tolearn\">Want to Learn</label>\n          <br />\n          {props.song.status === \"Learned\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learned\"\n              name=\"status\"\n              value=\"Learned\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learned\"\n              name=\"status\"\n              value=\"Learned\"\n            />\n          )}\n          <label htmlFor=\"radio-learned\">Learned</label>\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n            Notes\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            defaultValue={props.song.notes}\n            placeholder=\"Notes\"\n            onChange={(e) => setNotes(e.target.value)}\n          ></textarea>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary m-2\"\n          onClick={props.toggle}\n        >\n          Cancel\n        </button>\n        <button className=\"btn btn-danger m-2\" onClick={onDelete}>\n          <BsTrash style={{ marginRight: \"5px\" }} />\n          Delete Song\n        </button>\n        <button type=\"submit\" className=\"btn btn-success m-2\">\n          Save Changes\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}