[{"/Users/williamconnell/Desktop/Projects/playerlist/client/src/index.js":"1","/Users/williamconnell/Desktop/Projects/playerlist/client/src/reportWebVitals.js":"2","/Users/williamconnell/Desktop/Projects/playerlist/client/src/App.js":"3","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Cards.js":"4","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Sidebar.js":"5","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Heading.js":"6","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/ViewCard.js":"7","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/AddModal.js":"8","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/EditModal.js":"9","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/MobileSidebar.js":"10","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/NavbarBtn.js":"11","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Card.js":"12","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/StatusList.js":"13","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/index.js":"14","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/reportWebVitals.js":"15","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/App.js":"16","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Cards.js":"17","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Sidebar.js":"18","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/ViewCard.js":"19","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/EditModal.js":"20","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Heading.js":"21","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/MobileSidebar.js":"22","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/AddModal.js":"23","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Card.js":"24","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/StatusList.js":"25","/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/NavbarBtn.js":"26","/Users/williamconnell/Desktop/Projects/playerList/client/src/index.js":"27","/Users/williamconnell/Desktop/Projects/playerList/client/src/reportWebVitals.js":"28","/Users/williamconnell/Desktop/Projects/playerList/client/src/App.js":"29","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/MobileSidebar.js":"30","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Cards.js":"31","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Heading.js":"32","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/ViewCard.js":"33","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Sidebar.js":"34","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/AddModal.js":"35","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/EditModal.js":"36","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Card.js":"37","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/NavbarBtn.js":"38","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/StatusList.js":"39"},{"size":500,"mtime":1624671164043,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1624671164045,"results":"42","hashOfConfig":"41"},{"size":9365,"mtime":1627505708372,"results":"43","hashOfConfig":"41"},{"size":1214,"mtime":1626810073866,"results":"44","hashOfConfig":"41"},{"size":1686,"mtime":1625865069619,"results":"45","hashOfConfig":"41"},{"size":333,"mtime":1626122391734,"results":"46","hashOfConfig":"41"},{"size":2925,"mtime":1627505543355,"results":"47","hashOfConfig":"41"},{"size":4974,"mtime":1627504981699,"results":"48","hashOfConfig":"41"},{"size":7437,"mtime":1626459985854,"results":"49","hashOfConfig":"41"},{"size":2059,"mtime":1626460578578,"results":"50","hashOfConfig":"41"},{"size":391,"mtime":1626122499734,"results":"51","hashOfConfig":"41"},{"size":1543,"mtime":1627505591418,"results":"52","hashOfConfig":"41"},{"size":1675,"mtime":1625852087009,"results":"53","hashOfConfig":"41"},{"size":500,"mtime":1630453952847,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1630453952848,"results":"56","hashOfConfig":"55"},{"size":9584,"mtime":1630454615247,"results":"57","hashOfConfig":"55"},{"size":1214,"mtime":1630453952847,"results":"58","hashOfConfig":"55"},{"size":1686,"mtime":1630453952847,"results":"59","hashOfConfig":"55"},{"size":2925,"mtime":1630453952847,"results":"60","hashOfConfig":"55"},{"size":7437,"mtime":1630453952847,"results":"61","hashOfConfig":"55"},{"size":333,"mtime":1630453952847,"results":"62","hashOfConfig":"55"},{"size":2059,"mtime":1630453952847,"results":"63","hashOfConfig":"55"},{"size":4974,"mtime":1630453952847,"results":"64","hashOfConfig":"55"},{"size":1543,"mtime":1630453952847,"results":"65","hashOfConfig":"55"},{"size":1675,"mtime":1630453952847,"results":"66","hashOfConfig":"55"},{"size":391,"mtime":1630453952847,"results":"67","hashOfConfig":"55"},{"size":500,"mtime":1630453952847,"results":"68","hashOfConfig":"69"},{"size":362,"mtime":1630453952848,"results":"70","hashOfConfig":"69"},{"size":11987,"mtime":1631668715495,"results":"71","hashOfConfig":"69"},{"size":2065,"mtime":1630609344596,"results":"72","hashOfConfig":"69"},{"size":626,"mtime":1630524294007,"results":"73","hashOfConfig":"69"},{"size":333,"mtime":1630453952847,"results":"74","hashOfConfig":"69"},{"size":4125,"mtime":1631658040881,"results":"75","hashOfConfig":"69"},{"size":1694,"mtime":1630609383068,"results":"76","hashOfConfig":"69"},{"size":4998,"mtime":1631658241766,"results":"77","hashOfConfig":"69"},{"size":7373,"mtime":1630614408110,"results":"78","hashOfConfig":"69"},{"size":1543,"mtime":1630453952847,"results":"79","hashOfConfig":"69"},{"size":391,"mtime":1630453952847,"results":"80","hashOfConfig":"69"},{"size":1675,"mtime":1630453952847,"results":"81","hashOfConfig":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1cxqpol",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3u55x",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"1iz3qlp",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":2,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"139"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"139"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"139"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"/Users/williamconnell/Desktop/Projects/playerlist/client/src/index.js",[],["167","168"],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/reportWebVitals.js",[],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/App.js",["169","170","171","172","173","174"],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Cards.js",["175"],"import Card from \"./Card.js\";\nimport Transition from \"react-transition-group/Transition\";\n\nconst Cards = (props) => {\n  return (\n    <>\n      {props.songs.map((song) => (\n        <>\n          {/* disable transition for now to fix bug  */}\n          {song.visible && (\n            <Card\n              id={song.id}\n              name={song.name}\n              artist={song.artist}\n              chords={song.chords}\n              youtube={song.youtube}\n              status={song.status}\n              lyrics={song.lyrics}\n              toggle={props.toggle}\n            />\n          )}\n          {/* <Transition\n            in={song.visible}\n            timeout={400}\n            mountOnEnter\n            unmountOnExit\n          >\n            {(state) => (\n              <Card\n                id={song.id}\n                name={song.name}\n                artist={song.artist}\n                chords={song.chords}\n                youtube={song.youtube}\n                status={song.status}\n                lyrics={song.lyrics}\n                toggle={props.toggle}\n                state={state}\n              />\n            )}\n          </Transition> */}\n        </>\n      ))}\n    </>\n  );\n};\n\nexport default Cards;\n","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Sidebar.js",[],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Heading.js",[],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/ViewCard.js",["176"],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/AddModal.js",["177"],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/EditModal.js",["178"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { BsX, BsTrash } from \"react-icons/bs\";\n\nconst EditModal = (props) => {\n  const [songid, setSongid] = useState(\"\");\n  const [songName, setSongName] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [chords, setChords] = useState(\"\");\n  const [youtube, setYoutube] = useState(\"\");\n  const [status, setStatus] = useState(\"To Learn\");\n  const [notes, setNotes] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n\n  // the first time the modal is rendered, set song parameters (so they're not empty)\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    setSongid(props.song.id);\n    setSongName(props.song.name);\n    setArtist(props.song.artist);\n    setChords(props.song.chords);\n    setYoutube(props.song.youtube);\n    setStatus(props.song.status);\n    setNotes(props.song.notes);\n    setLyrics(props.song.lyrics);\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // if (youtube != \"https://www.youtube.com/embed/\") {\n    //   const code = youtube.slice(-11);\n    //   const newlink = \"https://www.youtube.com/embed/\" + code;\n    // } else {\n    //   const newlink = \"\";\n    // }\n\n    const code = youtube.slice(-11);\n    const newlink = \"https://www.youtube.com/embed/\" + code;\n\n    const song = {\n      id: songid,\n      name: songName,\n      artist: artist,\n      chords: chords,\n      youtube: newlink,\n      status: status,\n      notes: notes,\n      lyrics: lyrics,\n    };\n\n    props.saveChanges(song);\n    props.toggle();\n  };\n\n  // const onDelete = () => {\n  //   console.log(\"Song Deleted!\");\n  // };\n  const modalClasses = [\n    \"addmodal\",\n    props.state === \"entering\"\n      ? \"enteringCard\"\n      : props.state === \"exiting\"\n      ? \"exitingCard\"\n      : \"\",\n  ];\n\n  const backdropClasses = [\n    \"backdrop\",\n    props.state === \"entering\"\n      ? \"enteringBackdrop\"\n      : props.state === \"exiting\"\n      ? \"exitingBackdrop\"\n      : \"\",\n  ];\n\n  return (\n    <>\n      <div className={backdropClasses.join(\" \")} />\n      <form className={modalClasses.join(\" \")} onSubmit={onSubmit}>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h1 style={{ textAlign: \"center\" }}>Edit Song</h1>\n          <BsX className=\"modalX\" onClick={props.toggle} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Song Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            defaultValue={props.song.name}\n            placeholder=\"Something\"\n            onChange={(e) => setSongName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Artist\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            defaultValue={props.song.artist}\n            placeholder=\"The Beatles\"\n            onChange={(e) => setArtist(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Chords / Tabs\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"http://example.com\"\n            defaultValue={props.song.chords}\n            onChange={(e) => setChords(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Youtube\n          </label>\n          {props.song.youtube !== \"https://www.youtube.com/embed/\" ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              defaultValue={props.song.youtube}\n              placeholder=\"http://example.com\"\n              onChange={(e) => setYoutube(e.target.value)}\n            />\n          ) : (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              placeholder=\"http://example.com\"\n              onChange={(e) => setYoutube(e.target.value)}\n            />\n          )}\n        </div>\n\n        <label className=\"form-label\">Status:</label>\n        <div className=\"form-check\" onChange={(e) => setStatus(e.target.value)}>\n          {props.song.status === \"In Progress\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learning\"\n              name=\"status\"\n              value=\"In Progress\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learning\"\n              name=\"status\"\n              value=\"In Progress\"\n            />\n          )}\n          <label htmlFor=\"radio-learning\">Learning In Progress</label>\n          <br />\n\n          {props.song.status === \"To Learn\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-tolearn\"\n              name=\"status\"\n              value=\"To Learn\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-tolearn\"\n              name=\"status\"\n              value=\"To Learn\"\n            />\n          )}\n          <label htmlFor=\"radio-tolearn\">Want to Learn</label>\n          <br />\n          {props.song.status === \"Learned\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learned\"\n              name=\"status\"\n              value=\"Learned\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learned\"\n              name=\"status\"\n              value=\"Learned\"\n            />\n          )}\n          <label htmlFor=\"radio-learned\">Learned</label>\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n            Notes\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            defaultValue={props.song.notes}\n            placeholder=\"Notes\"\n            onChange={(e) => setNotes(e.target.value)}\n          ></textarea>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary m-2\"\n          onClick={props.toggle}\n        >\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger m-2\"\n          onClick={() => {\n            props.deleteSong(props.song.id);\n          }}\n        >\n          <BsTrash style={{ marginRight: \"5px\" }} />\n          Delete Song\n        </button>\n        <button type=\"submit\" className=\"btn btn-success m-2\">\n          Save Changes\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default EditModal;\n","/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/MobileSidebar.js",[],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/NavbarBtn.js",[],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/Card.js",[],"/Users/williamconnell/Desktop/Projects/playerlist/client/src/components/StatusList.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/index.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/reportWebVitals.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/App.js",["179","180","181","182","183","184"],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Cards.js",["185"],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Sidebar.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/ViewCard.js",["186"],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/EditModal.js",["187"],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Heading.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/MobileSidebar.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/AddModal.js",["188"],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/Card.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/StatusList.js",[],"/Users/williamconnell/Desktop/Projects/PlayerList/client/src/components/NavbarBtn.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/index.js",[],["189","190"],"/Users/williamconnell/Desktop/Projects/playerList/client/src/reportWebVitals.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/App.js",["191","192","193","194","195","196","197","198","199","200","201"],"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/MobileSidebar.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Cards.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Heading.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/ViewCard.js",["202","203","204"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { BsX, BsCheck } from \"react-icons/bs\";\n\nconst ViewCard = (props) => {\n  const [spotify, setSpotify] = useState(null);\n  const [soundcloud, setSoundcloud] = useState(null);\n  const [genius, setGenius] = useState(null);\n  const [youtube, setYoutube] = useState(null);\n\n  const onEdit = () => {\n    props.exit();\n    // show addmodal card but with current information already filled in\n    // create an editmodal component for ^this\n    // call function defined in App.js to show the edit modal\n    props.toggleEdit(props.song.id);\n  };\n\n  useEffect(() => {\n    showMedia();\n  }, []);\n\n  const showMedia = () => {\n    if (props.song.lyrics === \"\") {\n      console.log(\"lyrics is empty\");\n    } else {\n      console.log(props.song.lyrics);\n      for (const media in props.song.lyrics) {\n        if (media === \"genius\") {\n          setGenius(props.song.lyrics[media]);\n        } else if (media === \"soundcloud\") {\n          setSoundcloud(props.song.lyrics[media]);\n        } else if (media === \"spotify\") {\n          setSpotify(props.song.lyrics[media]);\n        } else if (media === \"youtube\" && props.song.youtube === \"\") {\n          console.log(\"new youtube link set\");\n          setYoutube(props.song.lyrics[media]);\n        }\n      }\n    }\n  };\n\n  // const markAsLearned = () => {\n  //   // mark song as learned;\n  // };\n  const modalClasses = [\n    \"addmodal\",\n    props.state === \"entering\"\n      ? \"enteringCard\"\n      : props.state === \"exiting\"\n      ? \"exitingCard\"\n      : \"\",\n  ];\n\n  const backdropClasses = [\n    \"backdrop\",\n    props.state === \"entering\"\n      ? \"enteringBackdrop\"\n      : props.state === \"exiting\"\n      ? \"exitingBackdrop\"\n      : \"\",\n  ];\n\n  return (\n    <>\n      <div className={backdropClasses.join(\" \")} onClick={props.exit} />\n      <div className={modalClasses.join(\" \")}>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h1 style={{ textAlign: \"center\" }}>{props.song.name}</h1>\n          <BsX className=\"modalX\" onClick={props.toggle} />\n        </div>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h2 style={{ textAlign: \"center\" }}>by {props.song.artist}</h2>\n          {/* keep modalX here for consistent layout, but make it invisible and non-functional */}\n          <BsX className=\"modalX hidden\" />\n        </div>\n        {props.song.youtube !== \"\" && (\n          <iframe\n            width=\"100%\"\n            height=\"345\"\n            src={`https://www.youtube.com/embed/${props.song.youtube}`}\n          ></iframe>\n        )}\n\n        <div>\n          {spotify != null && (\n            <a\n              className=\"btn btn-outline-dark m-2\"\n              href={spotify}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Listen on Spotify\n            </a>\n          )}\n          <br />\n          {genius != null && (\n            <a\n              className=\"btn btn-outline-dark m-2\"\n              href={genius}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              View Lyrics\n            </a>\n          )}\n          <br />\n          {soundcloud != null && (\n            <a\n              className=\"btn btn-outline-dark m-2\"\n              href={soundcloud}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Listen on Soundcloud\n            </a>\n          )}\n        </div>\n\n        <div className=\"notes-container\">\n          <h6>\n            <strong>Notes</strong>\n          </h6>\n          <span>{props.song.notes}</span>\n        </div>\n        <div className=\"d-flex\">\n          <button onClick={onEdit} className=\"btn btn-secondary m-1\">\n            Edit\n          </button>\n          <button\n            onClick={() => props.markCompleted(props.song.id)}\n            className=\"btn btn-light m-1\"\n          >\n            <BsCheck style={{ marginRight: \"5px\" }} />\n            Mark as Learned\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ViewCard;\n","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Sidebar.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/AddModal.js",["205"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { BsX } from \"react-icons/bs\";\n\nconst AddModal = (props) => {\n  const [songName, setSongName] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [chords, setChords] = useState(\"\");\n  const [youtube, setYoutube] = useState(\"\");\n  const [status, setStatus] = useState(\"To Learn\");\n  const [notes, setNotes] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // convert youtube link to 11 digit unique youtube id\n    const code = youtube.slice(-11);\n\n    const song = {\n      id: Math.random() * 10 + 1,\n      name: songName,\n      artist: artist,\n      chords: chords,\n      youtube: code,\n      status: status,\n      notes: notes,\n      lyrics: lyrics,\n    };\n    props.onAddSong(song);\n  };\n\n  if (props.state === \"entering\") {\n    console.log(\"entering\");\n  } else if (props.state === \"exiting\") {\n    console.log(\"exiting\");\n  }\n\n  const modalClasses = [\n    \"addmodal\",\n    props.state === \"entering\"\n      ? \"enteringCard\"\n      : props.state === \"exiting\"\n      ? \"exitingCard\"\n      : \"\",\n  ];\n\n  const backdropClasses = [\n    \"backdrop\",\n    props.state === \"entering\"\n      ? \"enteringBackdrop\"\n      : props.state === \"exiting\"\n      ? \"exitingBackdrop\"\n      : \"\",\n  ];\n\n  return (\n    <>\n      <div className={backdropClasses.join(\" \")} />\n      <form className={modalClasses.join(\" \")} onSubmit={onSubmit}>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h1 style={{ textAlign: \"center\" }}>Add a Song</h1>\n          <BsX className=\"modalX\" onClick={props.toggle} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Song Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"Something\"\n            onChange={(e) => setSongName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Artist\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"The Beatles\"\n            onChange={(e) => setArtist(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Chords / Tabs\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"http://example.com\"\n            onChange={(e) => setChords(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Youtube\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"http://example.com\"\n            onChange={(e) => setYoutube(e.target.value)}\n          />\n        </div>\n\n        <label className=\"form-label\">Status:</label>\n        <div className=\"form-check\" onChange={(e) => setStatus(e.target.value)}>\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"radio-learning\"\n            name=\"status\"\n            value=\"In Progress\"\n          />\n          <label htmlFor=\"radio-learning\">Learning In Progress</label>\n          <br />\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"radio-tolearn\"\n            name=\"status\"\n            value=\"To Learn\"\n            defaultChecked\n          />\n          <label htmlFor=\"radio-tolearn\">Want to Learn</label>\n          <br />\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"radio-learned\"\n            name=\"status\"\n            value=\"Learned\"\n          />\n          <label htmlFor=\"radio-learned\">Learned</label>\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n            Notes\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"Notes\"\n            onChange={(e) => setNotes(e.target.value)}\n          ></textarea>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary m-2\"\n          onClick={props.toggle}\n        >\n          Cancel\n        </button>\n        <button type=\"submit\" className=\"btn btn-success m-2\">\n          Save Changes\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AddModal;\n","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/EditModal.js",["206"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { BsX, BsTrash } from \"react-icons/bs\";\n\nconst EditModal = (props) => {\n  const [songid, setSongid] = useState(\"\");\n  const [songName, setSongName] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [chords, setChords] = useState(\"\");\n  const [youtube, setYoutube] = useState(\"\");\n  const [status, setStatus] = useState(\"To Learn\");\n  const [notes, setNotes] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n\n  // the first time the modal is rendered, set song parameters (so they're not empty)\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    setSongid(props.song.id);\n    setSongName(props.song.name);\n    setArtist(props.song.artist);\n    setChords(props.song.chords);\n    setYoutube(props.song.youtube);\n    setStatus(props.song.status);\n    setNotes(props.song.notes);\n    setLyrics(props.song.lyrics);\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // if (youtube != \"https://www.youtube.com/embed/\") {\n    //   const code = youtube.slice(-11);\n    //   const newlink = \"https://www.youtube.com/embed/\" + code;\n    // } else {\n    //   const newlink = \"\";\n    // }\n\n    const code = youtube.slice(-11);\n\n    const song = {\n      id: songid,\n      name: songName,\n      artist: artist,\n      chords: chords,\n      youtube: code,\n      status: status,\n      notes: notes,\n      lyrics: lyrics,\n    };\n\n    props.saveChanges(song);\n    props.toggle();\n  };\n\n  // const onDelete = () => {\n  //   console.log(\"Song Deleted!\");\n  // };\n  const modalClasses = [\n    \"addmodal\",\n    props.state === \"entering\"\n      ? \"enteringCard\"\n      : props.state === \"exiting\"\n      ? \"exitingCard\"\n      : \"\",\n  ];\n\n  const backdropClasses = [\n    \"backdrop\",\n    props.state === \"entering\"\n      ? \"enteringBackdrop\"\n      : props.state === \"exiting\"\n      ? \"exitingBackdrop\"\n      : \"\",\n  ];\n\n  return (\n    <>\n      <div className={backdropClasses.join(\" \")} />\n      <form className={modalClasses.join(\" \")} onSubmit={onSubmit}>\n        <div className=\"modalheading d-flex justify-content-between\">\n          <span />\n          <h1 style={{ textAlign: \"center\" }}>Edit Song</h1>\n          <BsX className=\"modalX\" onClick={props.toggle} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Song Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            defaultValue={props.song.name}\n            placeholder=\"Something\"\n            onChange={(e) => setSongName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Artist\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            defaultValue={props.song.artist}\n            placeholder=\"The Beatles\"\n            onChange={(e) => setArtist(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Chords / Tabs\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"http://example.com\"\n            defaultValue={props.song.chords}\n            onChange={(e) => setChords(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\n            Link to Youtube\n          </label>\n          {props.song.youtube !== \"https://www.youtube.com/embed/\" ? (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              defaultValue={props.song.youtube}\n              placeholder=\"http://example.com\"\n              onChange={(e) => setYoutube(e.target.value)}\n            />\n          ) : (\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"exampleFormControlInput1\"\n              placeholder=\"http://example.com\"\n              onChange={(e) => setYoutube(e.target.value)}\n            />\n          )}\n        </div>\n\n        <label className=\"form-label\">Status:</label>\n        <div className=\"form-check\" onChange={(e) => setStatus(e.target.value)}>\n          {props.song.status === \"In Progress\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learning\"\n              name=\"status\"\n              value=\"In Progress\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learning\"\n              name=\"status\"\n              value=\"In Progress\"\n            />\n          )}\n          <label htmlFor=\"radio-learning\">Learning In Progress</label>\n          <br />\n\n          {props.song.status === \"To Learn\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-tolearn\"\n              name=\"status\"\n              value=\"To Learn\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-tolearn\"\n              name=\"status\"\n              value=\"To Learn\"\n            />\n          )}\n          <label htmlFor=\"radio-tolearn\">Want to Learn</label>\n          <br />\n          {props.song.status === \"Learned\" ? (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learned\"\n              name=\"status\"\n              value=\"Learned\"\n              defaultChecked\n            />\n          ) : (\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              id=\"radio-learned\"\n              name=\"status\"\n              value=\"Learned\"\n            />\n          )}\n          <label htmlFor=\"radio-learned\">Learned</label>\n        </div>\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n            Notes\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            defaultValue={props.song.notes}\n            placeholder=\"Notes\"\n            onChange={(e) => setNotes(e.target.value)}\n          ></textarea>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary m-2\"\n          onClick={props.toggle}\n        >\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger m-2\"\n          onClick={() => {\n            props.deleteSong(props.song.id);\n          }}\n        >\n          <BsTrash style={{ marginRight: \"5px\" }} />\n          Delete Song\n        </button>\n        <button type=\"submit\" className=\"btn btn-success m-2\">\n          Save Changes\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default EditModal;\n","/Users/williamconnell/Desktop/Projects/playerList/client/src/components/Card.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/NavbarBtn.js",[],"/Users/williamconnell/Desktop/Projects/playerList/client/src/components/StatusList.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":26,"column":13,"nodeType":"213","endLine":64,"endColumn":4},{"ruleId":"214","severity":1,"message":"215","line":84,"column":22,"nodeType":"213","messageId":"216","endLine":84,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":114,"column":22,"nodeType":"213","messageId":"216","endLine":114,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":182,"column":11,"nodeType":"219","messageId":"220","endLine":182,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":187,"column":22,"nodeType":"213","messageId":"216","endLine":187,"endColumn":24},{"ruleId":"217","severity":1,"message":"221","line":223,"column":15,"nodeType":"219","messageId":"220","endLine":223,"endColumn":23},{"ruleId":"217","severity":1,"message":"222","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":50,"column":11,"nodeType":"225","endLine":54,"endColumn":12},{"ruleId":"217","severity":1,"message":"226","line":12,"column":18,"nodeType":"219","messageId":"220","endLine":12,"endColumn":27},{"ruleId":"211","severity":1,"message":"227","line":26,"column":6,"nodeType":"228","endLine":26,"endColumn":8,"suggestions":"229"},{"ruleId":"214","severity":1,"message":"215","line":85,"column":22,"nodeType":"213","messageId":"216","endLine":85,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":115,"column":22,"nodeType":"213","messageId":"216","endLine":115,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":156,"column":11,"nodeType":"219","messageId":"220","endLine":156,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":183,"column":11,"nodeType":"219","messageId":"220","endLine":183,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":188,"column":22,"nodeType":"213","messageId":"216","endLine":188,"endColumn":24},{"ruleId":"217","severity":1,"message":"221","line":224,"column":15,"nodeType":"219","messageId":"220","endLine":224,"endColumn":23},{"ruleId":"217","severity":1,"message":"222","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":50,"column":11,"nodeType":"225","endLine":54,"endColumn":12},{"ruleId":"211","severity":1,"message":"227","line":26,"column":6,"nodeType":"228","endLine":26,"endColumn":8,"suggestions":"230"},{"ruleId":"217","severity":1,"message":"226","line":12,"column":18,"nodeType":"219","messageId":"220","endLine":12,"endColumn":27},{"ruleId":"207","replacedBy":"231"},{"ruleId":"209","replacedBy":"232"},{"ruleId":"214","severity":1,"message":"215","line":47,"column":22,"nodeType":"213","messageId":"216","endLine":47,"endColumn":24},{"ruleId":"211","severity":1,"message":"233","line":70,"column":6,"nodeType":"228","endLine":70,"endColumn":18,"suggestions":"234"},{"ruleId":"214","severity":1,"message":"215","line":85,"column":22,"nodeType":"213","messageId":"216","endLine":85,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":136,"column":11,"nodeType":"219","messageId":"220","endLine":136,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":169,"column":11,"nodeType":"219","messageId":"220","endLine":169,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":174,"column":22,"nodeType":"213","messageId":"216","endLine":174,"endColumn":24},{"ruleId":"217","severity":1,"message":"221","line":210,"column":15,"nodeType":"219","messageId":"220","endLine":210,"endColumn":23},{"ruleId":"235","severity":2,"message":"236","line":232,"column":17,"nodeType":"219","messageId":"237","endLine":232,"endColumn":32},{"ruleId":"214","severity":1,"message":"215","line":235,"column":22,"nodeType":"213","messageId":"216","endLine":235,"endColumn":24},{"ruleId":"235","severity":2,"message":"236","line":244,"column":15,"nodeType":"219","messageId":"237","endLine":244,"endColumn":30},{"ruleId":"217","severity":1,"message":"218","line":269,"column":11,"nodeType":"219","messageId":"220","endLine":269,"endColumn":15},{"ruleId":"217","severity":1,"message":"238","line":9,"column":10,"nodeType":"219","messageId":"220","endLine":9,"endColumn":17},{"ruleId":"211","severity":1,"message":"239","line":21,"column":6,"nodeType":"228","endLine":21,"endColumn":8,"suggestions":"240"},{"ruleId":"223","severity":1,"message":"224","line":80,"column":11,"nodeType":"225","endLine":84,"endColumn":12},{"ruleId":"217","severity":1,"message":"226","line":12,"column":18,"nodeType":"219","messageId":"220","endLine":12,"endColumn":27},{"ruleId":"211","severity":1,"message":"227","line":26,"column":6,"nodeType":"228","endLine":26,"endColumn":8,"suggestions":"241"},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'Transition' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'setLyrics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.song.artist', 'props.song.chords', 'props.song.id', 'props.song.lyrics', 'props.song.name', 'props.song.notes', 'props.song.status', and 'props.song.youtube'. Either include them or remove the dependency array. If 'setSongid' needs the current value of 'props.song.id', you can also switch to useReducer instead of useState and read 'props.song.id' in the reducer.","ArrayExpression",["244"],["245"],["242"],["243"],"React Hook useEffect has a missing dependency: 'successCallback'. Either include it or remove the dependency array.",["246"],"no-undef","'currentIDLookup' is not defined.","undef","'youtube' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showMedia'. Either include it or remove the dependency array.",["247"],["248"],"no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"249","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"249","fix":"256"},"Update the dependencies array to be: [props.song.artist, props.song.chords, props.song.id, props.song.lyrics, props.song.name, props.song.notes, props.song.status, props.song.youtube]",{"range":"257","text":"258"},{"range":"259","text":"258"},"Update the dependencies array to be: [newestSong, successCallback]",{"range":"260","text":"261"},"Update the dependencies array to be: [showMedia]",{"range":"262","text":"263"},{"range":"264","text":"258"},[930,932],"[props.song.artist, props.song.chords, props.song.id, props.song.lyrics, props.song.name, props.song.notes, props.song.status, props.song.youtube]",[930,932],[1973,1985],"[newestSong, successCallback]",[657,659],"[showMedia]",[930,932]]